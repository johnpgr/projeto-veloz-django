services:
  server:
    build: ./server
    volumes:
      - ./server:/app
    ports:
      - 8000:8000
    env_file:
      - .env.production
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SETTINGS_PRODUCTION=True
    depends_on:
      - db

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client1
      - client2
    restart: unless-stopped

  # Client Instance 1
  client1:
    build: ./client
    environment:
      - NODE_ENV=production
    depends_on:
      - server
    restart: unless-stopped

  # Client Instance 2
  client2:
    build: ./client
    environment:
      - NODE_ENV=production
    depends_on:
      - server
    restart: unless-stopped
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
volumes:
  postgres_data:
